//polynominals = Preparation.PrepareFirstGeneration();
//for (int algorithmIteration = 0; algorithmIteration < Configuration.algorithmIterations; algorithmIteration++, k++)
//{
List<List<Polynominal>> polynominal = new List<List<Polynominal>>();

for (int i = 0; i < threadCount; i++)
{
Thread t = new Thread(() => { polynominal.Add(Work_part_1()); });
t.Start();
threads.Add(t);
}

foreach (Thread thread in threads)
{
    thread.Join();
}

stopwatch.Stop();
Console.WriteLine("Time taken: " + stopwatch.Elapsed.ToString(@"m\:ss\.fff") + "s" /* + polynominal.Count*/);


List<Polynominal> Work_part_1()
{
    Polynominal[] polynominals = new Polynominal[elementsPerChunk];
    if (k == 1)
        polynominals = Preparation.PrepareFirstGeneration();
    //polynominals = Mutation.MautatePolynominals(polynominals);
    return polynominals.ToList();
}
